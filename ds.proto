syntax = "proto3";

option go_package = "./proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message FeaturesRequest {}
message FeaturesResponse {
  enum Feature {
    DATASTORE = 0;
    BATCHING = 1;
    CHECKED = 2;
    SCRUBBED = 3;
    GC = 4;
    PERSISTENT = 5;
    TTL = 6;
    TRANSACTION = 7;
  }
  repeated Feature features = 1;
}

message GetRequest {
  uint64 TransactionID = 1;
  string Key = 2;
}
message GetResponse {
  bytes Value = 1;
}

message HasRequest {
  uint64 TransactionID = 1;
  string Key = 2;
}
message HasResponse {
  bool Has = 1;
}

message GetSizeRequest {
  uint64 TransactionID = 1;
  string Key = 2;
}
message GetSizeResponse {
  uint64 Size = 1;
}

message PutRequest {
  uint64 TransactionID = 1;
  string Key = 2;
  bytes Value = 3;
}
message PutResponse {}

message DeleteRequest {
  uint64 TransactionID = 1;
  string Key = 2;
}
message DeleteResponse {}

message SyncRequest {
  string Prefix = 1;
}
message SyncResponse {}

message QueryRequest {
  uint64 TransactionID = 1;
  string Prefix = 2;
  map<string, bytes> Filters = 3;
  map<string, bytes> Orders = 4;
  uint64 Limit = 5;
  uint64 Offset = 6;
  bool KeysOnly = 7;
  bool ReturnExpirations = 8;
  bool ReturnSizes = 9;
}
message QueryResult {
  string Key = 1;
  bytes Value = 2;
  uint64 Expiration = 3;
  uint64 Size = 4;
  google.protobuf.Any Error = 5;
}

message QueryFilterValueCompare {
  string Op = 1;
  bytes Value = 2;
}
message QueryFilterKeyCompare {
  string Op = 1;
  string Key = 2;
}
message QueryFilterKeyPrefix {
  string Prefix = 1;
}

message BatchRequest {
  enum OpCode {
    PUT = 0;
    DELETE = 1;
  }
  message Op {
    OpCode opCode = 1;
    string Key = 2;
    bytes Value = 3;    
  }
  repeated Op ops = 1;
}
message BatchResponse {}

message CheckRequest{}
message CheckResponse{}

message ScrubRequest {}
message ScrubResponse {}

message CollectGarbageRequest {}
message CollectGarbageResponse {}

message DiskUsageRequest {}
message DiskUsageResponse {
  uint64 Size = 1;
}

message PutWithTTLRequest {
  string Key = 1;
  bytes Value = 2;
  google.protobuf.Duration TTL = 3;
}
message PutWithTTLResponse {}

message SetTTLRequest {
  string Key = 1;
  google.protobuf.Duration TTL = 2;
}
message SetTTLResponse {}

message GetExpirationRequest {
  string Key = 1;
}
message GetExpirationResponse {
  google.protobuf.Timestamp Expiration = 1;
}

message NewTransactionRequest {
    bool ReadOnly = 1
}
message NewTransactionResponse {
  uint64 TransactionID = 1;
}

message CommitTransactionRequest {
  uint64 TransactionID = 1;
}
message CommitTransactionResponse {}

message DiscardTransactionRequest {
  uint64 TransactionID = 1;
}
message DiscardTransactionResponse {}

service Datastore {
  rpc Features(FeaturesRequest) returns (FeaturesResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc Has(HasRequest) returns (HasResponse);
  rpc GetSize(GetSizeRequest) returns (GetSizeResponse);
  rpc Put(PutRequest) returns (PutResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc Sync(SyncRequest) returns (SyncResponse);
  rpc Query(QueryRequest) returns (stream QueryResult);
  rpc Batch(BatchRequest) returns (BatchResponse);
  rpc Check(CheckRequest) returns (CheckResponse);
  rpc Scrub(ScrubRequest) returns (ScrubResponse);
  rpc CollectGarbage(CollectGarbageRequest) returns (CollectGarbageResponse);
  rpc DiskUsage(DiskUsageRequest) returns (DiskUsageResponse);
  rpc PutWithTTL(PutWithTTLRequest) returns (PutWithTTLResponse);
  rpc SetTTL(SetTTLRequest) returns (SetTTLResponse);
  rpc GetExpiration(GetExpirationRequest) returns (GetExpirationResponse);

  rpc NewTransaction(NewTransactionRequest) returns (NewTransactionResponse);
  rpc CommitTransaction(CommitTransactionRequest) returns (CommitTransactionResponse);
  rpc DiscardTransaction(DiscardTransactionRequest) returns (DiscardTransactionResponse);
}